name: Android CI Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: NLChat  # 确保代码被检出到NLChat目录

    - name: Set up JDK 17
      id: setup-java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set JAVA_HOME
      run: echo "JAVA_HOME=${{ steps.setup-java.outputs.path }}" >> $GITHUB_ENV

    - name: Set up Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: current

    - name: Grant execute permission for gradlew
      run: chmod +x NLChat/gradlew

    - name: Build Project
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}  # 显式设置 JAVA_HOME
      run: |
        echo "JAVA_HOME=${JAVA_HOME}"  # 确认 JAVA_HOME 已设置
        cd NLChat
        ./gradlew assembleRelease

    - name: Sign
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: NLChat/app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: NLChat  # 确保代码被检出到NLChat目录

    - name: Release Ready
      run: mv ${{ needs.build.outputs.signedReleaseFile }} NLChat_${{ github.ref_name }}.apk

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "NLChat_${{ github.ref_name }}.apk"
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true

    - name: Bump version and generate changelog
      id: version
      run: |
        cd NLChat
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        npm install -g standard-version
        standard-version --release-as ${{ github.ref_name }}
        git push --follow-tags origin ${{ github.ref_name }}

    - name: Get Commit Message
      id: get_commit_message
      run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

    - name: Create or Update Release Notes
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: ${{ env.COMMIT_MESSAGE }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用环境变量

  multi-platform-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        api-level: [29, 30]  # 你可以根据需要调整 API 级别
        arch: [arm64-v8a, armeabi-v7a]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: NLChat  # 确保代码被检出到NLChat目录

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: ${{ matrix.api-level }}
        build-tools: '34.0.0'

    - name: Grant execute permission for gradlew
      run: chmod +x NLChat/gradlew  # 在 NLChat 目录中执行

    - name: Start Emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: google_apis  # 使用 google_apis 而不是 default
        script: ./gradlew connectedAndroidTest --stacktrace --info
        emulator-options: -no-snapshot-load -no-window -gpu swiftshader_indirect
        disable-animations: true
        working-directory: NLChat
        emulator-boot-timeout: 600  # 增加模拟器启动超时时间到10分钟
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}  # 确保测试步骤也使用相同的 JAVA_HOME