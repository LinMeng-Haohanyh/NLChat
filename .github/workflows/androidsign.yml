name: Android CI Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: NLChat  # 确保代码被检出到NLChat目录

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set up JDK 17
      id: setup-java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set JAVA_HOME
      run: echo "JAVA_HOME=${{ steps.setup-java.outputs.path }}" >> $GITHUB_ENV

    - name: Set up Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: current

    - name: Grant execute permission for gradlew
      run: chmod +x NLChat/gradlew

    - name: Build Project
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}  # 显式设置 JAVA_HOME
      run: |
        echo "JAVA_HOME=${JAVA_HOME}"  # 确认 JAVA_HOME 已设置
        cd NLChat
        ./gradlew assembleRelease

    - name: Sign
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: NLChat/app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"

    - name: Release Ready
      run: mv ${{ steps.sign_app.outputs.signedReleaseFile }} NLChat_$GITHUB_REF_NAME.apk

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "NLChat_$GITHUB_REF_NAME.apk"
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true

    - name: Bump version and generate changelog
      id: version
      run: |
        cd NLChat
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        npm install -g standard-version
        standard-version --release-as ${{ github.ref_name }}
        git push --follow-tags origin ${{ github.ref_name }}

    - name: Create Release Notes
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          $(git log -1 --pretty=%B)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用环境变量

    - name: Run Instrumentation Tests
      run: |
        cd NLChat
        ./gradlew connectedAndroidTest
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}  # 确保测试步骤也使用相同的 JAVA_HOME